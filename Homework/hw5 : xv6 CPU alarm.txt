//Homeork 5 : xv6 CPU alarm
if(myproc() != 0 && (tf->cs & 3) == 3)
{
  myproc()->elasped_ticks++;
  if(myproc()->elasped_ticks == myproc()->alarmticks)
  {
    myproc()->elasped_ticks = 0;
    tf->esp -= 4;
    *(uint*)tf->esp = (uint)tf->eip;
    tf->eip = (uint)myproc()->alarmhandler;
  }
}
in trap.c in switch case T_IRQ0 + IRQ_TIMER

===================================================================
#define SYS_alarm  23 
in syscall.h

extern int sys_alarm(void);
in syscall.c

[SYS_alarm]   sys_alarm 
in syscall.c

int alarm(int ticks, void (*handler)());
in user.h

Added SYSCALL(alarm) to usys.S 

int sys_alarm(void)
{
  int ticks;
  void (*handler)();

  if(argint(0, &ticks) < 0)
    return -1;
  if(argptr(1, (char**)&handler, 1) < 0)
    return -1;
  myproc()->alarmticks = ticks;
  myproc()->alarmhandler = handler;
  return 0;
}
in sysproc.c

_alarm to the UPROGS definition in Makefile.

========================================================================
int alarmticks;              //hw5: xv6 CPU alarm
void (*alarmhandler)();      //hw5: xv6 CPU alarm
int elasped_ticks;           //hw5: xv6 CPU alarm

in structure proc in proc.h